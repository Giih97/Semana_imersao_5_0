{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\imersao_reactjs_nodejs_e_reactnative\\\\site\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    /** objeto de posição  */\n    name: \"\",\n    description: \"\",\n    status: \"\"\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    // usar para infomar o erro na tela\n    formSave: false,\n    type: \"\",\n    message: \"\"\n  });\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMeta = async e => {\n    // async = espera\n    e.preventDefault(); // para não atualizar a página\n\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:3002/metas\", {\n        //enviando metas\n        method: \"POST\",\n        body: JSON.stringify(meta),\n        // enviando metas em json\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: \"error\",\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: \"sucess\",\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      //não conseguindo acessa a api , acessa o catch\n      setResponse({\n        formSave: false,\n        type: \"error\",\n        message: \"Erro meta não cadastrada\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `.form{\n                    background-color:#6A5ACD;\n                    color:#800000;\n                    padding-top: 30px;\n                    padding-bottom:150px;\n                    margin-bottom:0rem !important;\n                }`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar Minha Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), response.type === \"error\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : \"\", response.type === \"success\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome de meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Descri\\xE7\\xE3o \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              id: \"\",\n              placeholder: \"Descri\\xE7\\xE3o da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"Status de meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"secondary\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["C:/imersao_reactjs_nodejs_e_reactnative/site/pages/cadastrar.js"],"names":["React","useState","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Alert","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {Jumbotron,Container, Button, Form, FormGroup, Label, Input,Alert} from 'reactstrap'\r\n\r\nfunction Cadastrar() {\r\n  const [meta, setMeta] = useState({\r\n    /** objeto de posição  */ name: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    // usar para infomar o erro na tela\r\n    formSave: false,\r\n    type: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onChangeInput = (e) =>\r\n    setMeta({ ...meta, [e.target.name]: e.target.value });\r\n\r\n  const sendMeta = async (e) => {\r\n    // async = espera\r\n    e.preventDefault(); // para não atualizar a página\r\n\r\n    setResponse({ formSave: true });\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3002/metas\", {\r\n        //enviando metas\r\n        method: \"POST\",\r\n        body: JSON.stringify(meta), // enviando metas em json\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      const responseEnv = await res.json();\r\n\r\n      if (responseEnv.error) {\r\n        setResponse({\r\n          formSave: false,\r\n          type: \"error\",\r\n          message: responseEnv.message,\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave: false,\r\n          type: \"sucess\",\r\n          message: responseEnv.message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      //não conseguindo acessa a api , acessa o catch\r\n      setResponse({\r\n        formSave: false,\r\n        type: \"error\",\r\n        message: \"Erro meta não cadastrada\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* div vazia por causa de duas linhas */}\r\n      <Jumbotron fluid className=\"form\">\r\n        <style>\r\n          {`.form{\r\n                    background-color:#6A5ACD;\r\n                    color:#800000;\r\n                    padding-top: 30px;\r\n                    padding-bottom:150px;\r\n                    margin-bottom:0rem !important;\r\n                }`}\r\n        </style>\r\n        <Container>\r\n          <h1 className=\"display-4 text-center\">Cadastrar Minha Meta</h1>\r\n          <hr />\r\n\r\n          {response.type === \"error\" ? (\r\n            <Alert color=\"danger\">\r\n              <p>{response.message}</p>\r\n            </Alert>\r\n          ) : (\"\" )}\r\n          {response.type === \"success\" ? (\r\n            <Alert color=\"success\">\r\n              <p>{response.message}</p>{\" \"}\r\n            </Alert>\r\n          ) : (\"\")}\r\n\r\n          <Form onSubmit={sendMeta}>\r\n            <FormGroup>\r\n              <Label>Nome</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Nome de meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Descrição </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                id=\"\"\r\n                placeholder=\"Descrição da meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Status</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"status\"\r\n                id=\"status\"\r\n                placeholder=\"Status de meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            {response.formSave ? (\r\n              <Button type=\"submit\" color=\"danger\" disabled>\r\n                Enviando...\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\" outline color=\"secondary\">\r\n                Cadastrar\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}