{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\imersao_reactjs_nodejs_e_reactnative\\\\site\\\\pages\\\\index.js\";\nimport React from 'react';\nimport { Jumbotron, Container, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport Menu from '../components/Menu';\n\nfunction Home({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: [\" \", `.list{\n          background-color:#4B0082 ;\n          color:#8b1a1a;\n          padding-top:30px;\n          padding-bottom:150px;\n          margin-bottom: 0rem !important;\n        }.title-top{\n          color:#8B0000 \n        }`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center title-top\",\n          children: \" Minhas Metas! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 77\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [\" \", data.metas.map((meta //map vai percorrer cada meta\n          ) =>\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [\" \", \" \", /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListGroupItemHeading, {\n                children: [\" \", meta.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 9\n              }, this), \" \", /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                children: [\" \", meta.description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 36\n              }, this), \" \", /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                children: [\" \", meta.status, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 55\n            }, this)]\n          }, meta._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true);\n}\n/* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n   o navegador o html, dessa forma os navegadores conseguem ler a página*/\n\n\nexport async function getServerSideProps() {\n  //a funçao está pré-renderizar a pagina a cada solicitação\n  const response = await fetch(`http://localhost:3002/metas`); //enquanto não processa essa parte,não prossegue\n\n  const data = await response.json(); // após ler os dados , atribuo a const data\n\n  return {\n    props: {\n      data\n    }\n  }; // retorna dados\n}\nexport default Home;","map":{"version":3,"sources":["C:/imersao_reactjs_nodejs_e_reactnative/site/pages/index.js"],"names":["React","Jumbotron","Container","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","Menu","Home","data","metas","map","meta","name","description","status","_id","getServerSideProps","response","fetch","json","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,SADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,oBALF,EAMEC,iBANF,QAOO,YAPP;AAQA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA;AADY,CAAd,EAEG;AACD,sBAAS;AAAA,4BAEP,QACA,IADA;AAAA;AAAA;AAAA;AAAA,YAFO,eAIP,QACA,SADA;AACU,MAAA,KAAK,MADf;AACgB,MAAA,SAAS,EAAG,MAD5B;AAAA,8BAEA;AAAA,wBAEG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAVI;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,oBAcQ,QACR,SADQ;AAAA,gCAER;AACG,UAAA,SAAS,EAAG,iCADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFQ,oBAGgE;AAAA;AAAA;AAAA;AAAA,gBAHhE,eAKR,QACA,SADA;AAAA,0BAEEA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CACbC,IADa,CACR;AADQ;AAAA;AAER;AAAA,8CAIyC,QAC9C,aAD8C;AAAA,sCAE9C,QACA,oBADA;AAAA,gCAEEA,IAAI,CAACC,IAFP;AAAA;AAAA;AAAA;AAAA;AAAA,sBAF8C,oBAKnB,QAC3B,iBAD2B;AAAA,gCAEzBD,IAAI,CAACE,WAFoB;AAAA;AAAA;AAAA;AAAA;AAAA,sBALmB,oBAQtB,QACxB,iBADwB;AAAA,gCAEtBF,IAAI,CAACG,MAFiB;AAAA;AAAA;AAAA;AAAA;AAAA,sBARsB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJzC;AAAA,aAEHH,IAAI,CAACI,GAFF;AAAA;AAAA;AAAA;AAAA,kBAFP,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALQ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJO;AAAA,kBAAT;AAuDD;AAED;AACA;;;AACA,OAAO,eAAeC,kBAAf,GAAoC;AACzC;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,CAA5B,CAFyC,CAEoB;;AAC7D,QAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB,CAHyC,CAGL;;AACpC,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLZ,MAAAA;AADK;AADF,GAAP,CAJyC,CAQtC;AACJ;AAED,eAAeD,IAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText\r\n} from 'reactstrap'\r\nimport Menu from '../components/Menu'\r\n\r\nfunction Home({\r\n  data\r\n}) {\r\n  return ( <\r\n    >\r\n    <\r\n    Menu / >\r\n    <\r\n    Jumbotron fluid className = \"list\" >\r\n    <\r\n    style > {\r\n      `.list{\r\n          background-color:#4B0082 ;\r\n          color:#8b1a1a;\r\n          padding-top:30px;\r\n          padding-bottom:150px;\r\n          margin-bottom: 0rem !important;\r\n        }.title-top{\r\n          color:#8B0000 \r\n        }`\r\n    } <\r\n    /style> <\r\n    Container >\r\n    <\r\n    h1 className = \"display-4 text-center title-top\" > Minhas Metas! < /h1> <\r\n    hr / >\r\n    <\r\n    ListGroup > {\r\n      data.metas.map((\r\n        meta //map vai percorrer cada meta\r\n      ) => ( <\r\n        div key = {\r\n          meta._id\r\n        } > {\r\n          /*chave é igual propriedade e seu a id */ } <\r\n        ListGroupItem >\r\n        <\r\n        ListGroupItemHeading > {\r\n          meta.name\r\n        } < /ListGroupItemHeading> <\r\n        ListGroupItemText > {\r\n          meta.description\r\n        } < /ListGroupItemText> <\r\n        ListGroupItemText > {\r\n          meta.status\r\n        } < /ListGroupItemText> <\r\n        /ListGroupItem>\r\n\r\n        <\r\n        /div>\r\n\r\n      ))\r\n    } <\r\n    /ListGroup> <\r\n    /Container> <\r\n    /Jumbotron> <\r\n    />\r\n  );\r\n}\r\n\r\n/* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n   o navegador o html, dessa forma os navegadores conseguem ler a página*/\r\nexport async function getServerSideProps() {\r\n  //a funçao está pré-renderizar a pagina a cada solicitação\r\n  const response = await fetch(`http://localhost:3002/metas`); //enquanto não processa essa parte,não prossegue\r\n  const data = await response.json(); // após ler os dados , atribuo a const data\r\n  return {\r\n    props: {\r\n      data\r\n    }\r\n  }; // retorna dados\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}