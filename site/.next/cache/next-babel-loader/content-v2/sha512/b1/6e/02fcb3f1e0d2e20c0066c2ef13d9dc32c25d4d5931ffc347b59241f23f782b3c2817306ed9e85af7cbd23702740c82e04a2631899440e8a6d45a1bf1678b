{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\imersao_reactjs_nodejs_e_reactnative\\\\site\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Menu from '../components/Menu';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    /** objeto de posição  */\n    name: \"\",\n    description: \"\",\n    status: \"\"\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    // usar para infomar o erro na tela\n    formSave: false,\n    type: \"\",\n    message: \"\"\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // async = espera\n              e.preventDefault(); // para não atualizar a página\n\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch(\"http://localhost:3002/metas\", {\n                //enviando metas\n                method: \"POST\",\n                body: JSON.stringify(meta),\n                // enviando metas em json\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: \"error\",\n                  message: responseEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: \"sucess\",\n                  message: responseEnv.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              //não conseguindo acessa a api , acessa o catch\n              setResponse({\n                formSave: false,\n                type: \"error\",\n                message: \"Erro meta não cadastrada\"\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: \".form{\\n                    background-color:#4B0082;\\n                    color:#8B0000;\\n                    padding-top: 30px;\\n                    padding-bottom:150px;\\n                    margin-bottom:0rem !important;\\n                }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar Minha Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), response.type === \"error\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : \"\", response.type === \"success\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome de meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Descri\\xE7\\xE3o \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              id: \"\",\n              placeholder: \"Descri\\xE7\\xE3o da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"Status de meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"secondary\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cadastrar, \"8LIx0LDXJv57fxI7wfw9rwmnrdc=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["C:/imersao_reactjs_nodejs_e_reactnative/site/pages/cadastrar.js"],"names":["React","useState","Menu","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Alert","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","e","target","value","sendMeta","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport Menu from '../components/Menu'\r\n\r\nimport {Jumbotron,Container, Button, Form, FormGroup, Label, Input,Alert} from 'reactstrap'\r\n\r\nfunction Cadastrar() {\r\n  const [meta, setMeta] = useState({\r\n    /** objeto de posição  */\r\n     name: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    // usar para infomar o erro na tela\r\n    formSave: false,\r\n    type: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onChangeInput = (e) =>\r\n    setMeta({ ...meta, [e.target.name]: e.target.value });\r\n\r\n  const sendMeta = async (e) => {\r\n    // async = espera\r\n    e.preventDefault(); // para não atualizar a página\r\n\r\n    setResponse({ formSave: true });\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3002/metas\", {\r\n        //enviando metas\r\n        method: \"POST\",\r\n        body: JSON.stringify(meta), // enviando metas em json\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      const responseEnv = await res.json();\r\n\r\n      if (responseEnv.error) {\r\n        setResponse({\r\n          formSave: false,\r\n          type: \"error\",\r\n          message: responseEnv.message,\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave: false,\r\n          type: \"sucess\",\r\n          message: responseEnv.message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      //não conseguindo acessa a api , acessa o catch\r\n      setResponse({\r\n        formSave: false,\r\n        type: \"error\",\r\n        message: \"Erro meta não cadastrada\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* div vazia por causa de duas linhas */}\r\n\r\n      <Menu/>\r\n      <Jumbotron fluid className=\"form\">\r\n        <style>\r\n          {`.form{\r\n                    background-color:#4B0082;\r\n                    color:#8B0000;\r\n                    padding-top: 30px;\r\n                    padding-bottom:150px;\r\n                    margin-bottom:0rem !important;\r\n                }`}\r\n        </style>\r\n        <Container>\r\n          <h1 className=\"display-4 text-center\">Cadastrar Minha Meta</h1>\r\n          <hr />\r\n\r\n          {response.type === \"error\" ? (\r\n            <Alert color=\"danger\">\r\n              <p>{response.message}</p>\r\n            </Alert>\r\n          ) : (\"\" )}\r\n          {response.type === \"success\" ? (\r\n            <Alert color=\"success\">\r\n              <p>{response.message}</p>{\" \"}\r\n            </Alert>\r\n          ) : (\"\")}\r\n\r\n          <Form onSubmit={sendMeta}>\r\n            <FormGroup>\r\n              <Label>Nome</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Nome de meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Descrição </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                id=\"\"\r\n                placeholder=\"Descrição da meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Status</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"status\"\r\n                id=\"status\"\r\n                placeholder=\"Status de meta\"\r\n                onChange={onChangeInput}\r\n              ></Input>\r\n            </FormGroup>\r\n            {response.formSave ? (\r\n              <Button type=\"submit\" color=\"danger\" disabled>\r\n                Enviando...\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\" outline color=\"secondary\">\r\n                Cadastrar\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}