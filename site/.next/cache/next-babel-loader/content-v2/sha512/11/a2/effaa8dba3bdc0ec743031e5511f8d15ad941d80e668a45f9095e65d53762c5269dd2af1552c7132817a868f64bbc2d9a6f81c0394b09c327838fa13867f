{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\imersao_reactjs_nodejs_e_reactnative\\\\site\\\\pages\\\\index.js\";\n\nfunction Home({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minhas Metas!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), data.metas.map((meta //map vai percorrer cada meta\n    ) =>\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: meta.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meta.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meta.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, meta._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n/* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n   o navegador o html, dessa forma os navegadores conseguem ler a página*/\n\n\nexport async function getServerSideProps() {\n  //a funçao está pré-renderizar a pagina a cada solicitação\n  const response = await fetch(`http://localhost:3002/metas`); //enquanto não processa essa parte,não prossegue\n\n  const data = await response.json(); // após ler os dados , atribuo a const data\n\n  console.log(data);\n  return {\n    props: {\n      data\n    }\n  }; // retorna dados\n}\nexport default Home;","map":{"version":3,"sources":["C:/imersao_reactjs_nodejs_e_reactnative/site/pages/index.js"],"names":["Home","data","metas","map","meta","name","description","status","_id","getServerSideProps","response","fetch","json","console","log","props"],"mappings":";;;;AAAA,SAASA,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACtB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CACdC,IADc,CACT;AADS;AAAA;AAGd;AAAA,8BAEE;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUH,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA,YAHD,CAHH;AAAA,kBADF;AAiBD;AAED;AACA;;;AACA,OAAO,eAAeC,kBAAf,GAAoC;AACzC;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,CAA5B,CAFyC,CAEoB;;AAC7D,QAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB,CAHyC,CAGL;;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,SAAO;AAAEc,IAAAA,KAAK,EAAE;AAAEd,MAAAA;AAAF;AAAT,GAAP,CALyC,CAKb;AAC7B;AAED,eAAeD,IAAf","sourcesContent":["function Home({ data }) {\r\n  return (\r\n    <>\r\n      <h1>Minhas Metas!</h1>\r\n      <hr />\r\n      {data.metas.map((\r\n        meta //map vai percorrer cada meta\r\n      ) => (\r\n        <div key={meta._id}>\r\n          {/*chave é igual propriedade e seu a id */}\r\n          <h2>{meta.name}</h2>\r\n          <p>{meta.description}</p>\r\n          <p>{meta.status}</p>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n/* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n   o navegador o html, dessa forma os navegadores conseguem ler a página*/\r\nexport async function getServerSideProps() {\r\n  //a funçao está pré-renderizar a pagina a cada solicitação\r\n  const response = await fetch(`http://localhost:3002/metas`); //enquanto não processa essa parte,não prossegue\r\n  const data = await response.json(); // após ler os dados , atribuo a const data\r\n  console.log(data);\r\n  return { props: { data } }; // retorna dados\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}