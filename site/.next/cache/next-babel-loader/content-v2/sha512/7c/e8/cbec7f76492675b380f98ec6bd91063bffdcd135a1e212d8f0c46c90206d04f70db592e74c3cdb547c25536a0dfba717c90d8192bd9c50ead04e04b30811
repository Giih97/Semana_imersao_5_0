{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\imersao_reactjs_nodejs_e_reactnative\\\\site\\\\pages\\\\index.js\";\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minhas Metas!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: console.log(data.metas)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), data.metas.map(function (meta) {\n      return (\n        /*#__PURE__*/\n        //map vai percorrer cada meta\n        _jsxDEV(\"div\", {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: meta.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 7,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: meta.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: meta.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 7\n          }, _this)]\n        }, meta._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 5\n        }, _this)\n      );\n    })]\n  }, void 0, true);\n}\n/* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n o navegador o html, dessa forma os navegadores conseguem ler a página*/\n\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/imersao_reactjs_nodejs_e_reactnative/site/pages/index.js"],"names":["Home","data","console","log","metas","map","meta","name","description","status","_id"],"mappings":";;;;AAAA,SAASA,IAAT,OAAsB;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAClB,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAA,gBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFK,EAGJH,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA;AAAA;AAAO;AAC7B;AAAA,wCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA,WAAWH,IAAI,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AADsB;AAAA,KAAnB,CAHI;AAAA,kBAAP;AAaD;AAED;AACF;;;KAjBSV,I;;AA2BP,eAAeA,IAAf","sourcesContent":["function Home({data}) {\r\n    return <>\r\n      <h1>Minhas Metas!</h1>\r\n      <p>{console.log(data.metas)}</p>\r\n      {data.metas.map(meta => (  //map vai percorrer cada meta\r\n    <div key ={meta._id}>  {/*chave é igual propriedade e seu a id */}\r\n      <h2>{meta.name}</h2> \r\n      <h2>{meta.description}</h2>\r\n      <p>{meta.status}</p>\r\n      <hr />\r\n      </div>\r\n      ))}\r\n    </>\r\n\r\n  }\r\n\r\n  /* getServerSideProps = o projeto é executado no servidor, após essa execução , o servidor enviar\r\n   o navegador o html, dessa forma os navegadores conseguem ler a página*/\r\n  export async function getServerSideProps() {   //a funçao está pré-renderizar a pagina a cada solicitação\r\n    const response = await fetch(`http://localhost:3002/metas`); //enquanto não processa essa parte,não prossegue\r\n    const data = await response.json() ; // após ler os dados , atribuo a const data\r\n    console.log(data);\r\n    return {props: {data} };  // retorna dados\r\n    }\r\n  \r\n  \r\n  \r\n  export default Home;"]},"metadata":{},"sourceType":"module"}